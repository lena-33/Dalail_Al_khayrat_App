// Import required packages and dependencies
import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart'; // For opening YouTube playlist
import 'package:youtube_player_flutter/youtube_player_flutter.dart'; // For embedded YouTube videos
import '../../global_settings.dart'; // ‚Üê Used for dynamic font and size settings

// This page displays explanation of Dalael Al-Khayrat with bio and videos
class DalaelExplanationPage extends StatelessWidget {
  const DalaelExplanationPage({Key? key}) : super(key: key);

  // Helper widget to display section headers with icons
  Widget sectionTitle(IconData icon, String title) {
    return Directionality(
      textDirection: TextDirection.rtl,
      child: Row(
        children: [
          Icon(icon, color: Colors.brown),
          const SizedBox(width: 8),
          Text(
            title,
            style: TextStyle(
              fontSize: 20,
              fontWeight: FontWeight.bold,
              color: Colors.brown,
            ),
          ),
        ],
      ),
    );
  }

  // Helper widget to create YouTube players for each video
  Widget buildYoutubePlayer(String videoId) {
    return YoutubePlayer(
      controller: YoutubePlayerController(
        initialVideoId: videoId,
        flags: const YoutubePlayerFlags(autoPlay: false, mute: false),
      ),
      showVideoProgressIndicator: true,
      progressIndicatorColor: Colors.brown,
    );
  }

  @override
  Widget build(BuildContext context) {
    // List of YouTube video IDs for embedding
    final List<String> videoIds = [
      'QHxA--ukckU',
      'X_87MvS5UQw',
      'v6P-uoulDMc',
      'TUAdVewPxjk',
      'spXV2XOFOes',
      'Rz0NwmbPdSY',
      'tvMQhmbqQ3c',
      'mqfpP2Qt3jw',
      'd3QbvdzLguc',
      'OKmF_iOm-JA',
      'KqNM0sFvcQ8',
      'NryB3AGxXEQ',
      'l7OOlB9K4ww',
      'ybU0BBtHsw4',
      'vNfOVDzQEgE',
      'm_Zh_yuIqzI',
      'jaIm_-TWkBk',
      'WD67TPh8AN4',
      'gx21C59ahzY',
      'qlfT-yHT8jw',
      'XJBULw5xhso',
      'XM-QoKlykPI',
    ];

    return ValueListenableBuilder<String>(
      valueListenable: selectedFontNotifier,
      builder: (context, fontFamily, _) {
        return ValueListenableBuilder<double>(
          valueListenable: fontSizeNotifier,
          builder: (context, fontSize, _) {
            return Scaffold(
              backgroundColor: const Color(0xFFF5F5DC),
              // AppBar
              appBar: AppBar(
                backgroundColor: const Color(0xFFDAC3A7),
                elevation: 0,
                iconTheme: const IconThemeData(color: Colors.white),
                title: Text(
                  'ÿ¥ÿ±ÿ≠ ÿØŸÑÿßÿ¶ŸÑ ÿßŸÑÿÆŸäÿ±ÿßÿ™',
                  style: TextStyle(
                    fontFamily: fontFamily,
                    fontSize: fontSize,
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                centerTitle: true,
              ),
              // Main content
              body: ListView(
                padding: const EdgeInsets.all(16),
                children: [
                  // Section heading
                  Padding(
                    padding: const EdgeInsets.only(bottom: 16.0),
                    child: Text(
                      ':ÿ¥ÿ±ÿ≠ ÿØŸÑÿßÿ¶ŸÑ ÿßŸÑÿÆŸäÿ±ÿßÿ™ ŸÑŸÑÿØŸÉÿ™Ÿàÿ± Ÿäÿ≥ÿ±Ÿä ÿ¨ÿ®ÿ±',
                      style: TextStyle(
                        fontFamily: fontFamily,
                        fontSize: fontSize + 1,
                        color: Colors.brown,
                        fontWeight: FontWeight.w600,
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ),

                  // Section 1: Bio - Birth and Background
                  sectionTitle(Icons.calendar_today, 'ÿßŸÑŸÖŸàŸÑÿØ ŸàÿßŸÑŸÜÿ¥ÿ£ÿ©'),
                  const SizedBox(height: 8),
                  Directionality(
                    textDirection: TextDirection.rtl,
                    child: Text(
                      'ŸàŸÑÿØ ŸÅŸä ÿ≠Ÿä ÿ±Ÿàÿ∂ ÿßŸÑŸÅÿ±ÿ¨ ÿ®ÿßŸÑŸÇÿßŸáÿ±ÿ© €≤€≥ / Ÿ© / €±Ÿ©Ÿ•Ÿ§ ÿå ÿ™ŸÑŸÇŸâ ÿßŸÑÿ™ÿπŸÑŸäŸÖ ÿ®ÿßŸÑŸÖÿØÿßÿ±ÿ≥ ÿßŸÑÿ≠ŸÉŸàŸÖŸäÿ© ÿ≠ÿ™Ÿâ ÿßŸÑÿ™ÿ≠ŸÇ ÿ®ŸÉŸÑŸäÿ© ÿßŸÑÿ∑ÿ® ÿ¨ÿßŸÖÿπÿ© ÿßŸÑŸÇÿßŸáÿ±ÿ©ÿå Ÿàÿ™ÿÆÿ±ÿ¨ ŸÅŸäŸáÿß ÿ®ÿ™ŸÇÿØŸäÿ± ÿ¨ŸäÿØ ÿ¨ÿØŸãÿß ŸÖÿπ ŸÖÿ±ÿ™ÿ®ÿ© ÿßŸÑÿ¥ÿ±ŸÅ ÿØŸäÿ≥ŸÖÿ®ÿ± €±Ÿ©Ÿß€∏ŸÖ ÿå Ÿàÿ≠ÿµŸÑ ÿπŸÑŸâ ŸÖÿßÿ¨ÿ≥ÿ™Ÿäÿ± ÿßŸÑÿ¨ÿ±ÿßÿ≠ÿ© ÿßŸÑÿπÿßŸÖÿ© Ÿàÿ¨ÿ±ÿßÿ≠ÿ© ÿßŸÑÿ£ŸàÿπŸäÿ© ÿßŸÑÿØŸÖŸàŸäÿ© ŸÖŸÜ ÿ¨ÿßŸÖÿπÿ© ÿßŸÑŸÇÿßŸáÿ±ÿ© ŸÜŸàŸÅŸÖÿ®ÿ± €±Ÿ©€∏€≥ ŸÖ ÿå ÿ´ŸÖ ÿ≠ÿµŸÑ ÿπŸÑŸâ ÿØŸÉÿ™Ÿàÿ±ÿßŸá ÿßŸÑÿ¨ÿ±ÿßÿ≠ÿ© ÿßŸÑÿπÿßŸÖÿ© ŸÖŸÜ ÿ¨ÿßŸÖÿπÿ© ÿßŸÑŸÇÿßŸáÿ±ÿ© ŸÖÿßŸäŸà €±Ÿ©Ÿ©€±ŸÖÿå Ÿàÿ≤ŸÖÿßŸÑÿ© ÿ¨ŸÖÿπŸäÿ© ÿßŸÑÿ¨ÿ±ÿßÿ≠ŸäŸÜ ÿßŸÑÿØŸàŸÑŸäÿ© ŸÅŸä ŸÖÿßŸäŸà €±Ÿ©Ÿ©€≤ŸÖÿå ÿ´ŸÖ ÿßŸÑÿ™ÿ≠ŸÇ ÿ®ŸÉŸÑŸäÿ© ÿßŸÑÿ¥ÿ±Ÿäÿπÿ© ŸàÿßŸÑŸÇÿßŸÜŸàŸÜ ÿ¨ÿßŸÖÿπÿ© ÿßŸÑÿ£ÿ≤Ÿáÿ± €±Ÿ©Ÿ©€≤ŸÖ ÿå Ÿàÿ≠ÿµŸÑ ÿπŸÑŸâ ŸÑŸäÿ≥ÿßŸÜÿ≥ ÿßŸÑÿ¥ÿ±Ÿäÿπÿ© ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ© ÿ®ÿ™ŸÇÿØŸäÿ± ÿ¨ŸäÿØ ÿ¨ÿØŸãÿß €±Ÿ©Ÿ©€∏ŸÖ.',
                      style: TextStyle(
                        fontFamily: fontFamily,
                        fontSize: fontSize,
                        height: 1.8,
                      ),
                    ),
                  ),
                  const SizedBox(height: 24),
                  // Section 2: Quran memorization
                  sectionTitle(Icons.menu_book, 'ÿ≠ŸÅÿ∏ ÿßŸÑŸÇÿ±ÿ¢ŸÜ ÿßŸÑŸÉÿ±ŸäŸÖ'),
                  const SizedBox(height: 8),
                  Directionality(
                    textDirection: TextDirection.rtl,
                    child: Text(
                      'ÿ®ÿØÿ£ ÿ≠ŸÅÿ∏ ÿßŸÑŸÇÿ±ÿ¢ŸÜ ÿßŸÑŸÉÿ±ŸäŸÖ ÿ®ÿ±ŸàÿßŸäÿ© ÿ≠ŸÅÿµ ÿπŸÜ ÿπÿßÿµŸÖ ÿ£ÿ´ŸÜÿßÿ° ÿØÿ±ÿßÿ≥ÿ™Ÿá ÿ®ŸÉŸÑŸäÿ© ÿßŸÑÿ∑ÿ® ÿπŸÑŸâ ŸäÿØ ŸÅÿ∂ŸäŸÑÿ© ÿßŸÑÿ¥ŸäÿÆ ÿπÿ®ÿØ ÿßŸÑÿ≠ŸÉŸäŸÖ ÿ®ŸÜ ÿπÿ®ÿØ ÿßŸÑÿ≥ŸÑÿßŸÖ ÿÆÿßÿ∑ÿ±ÿå ŸàÿÆÿ™ŸÖŸá ÿ≠ŸÅÿ∏Ÿãÿß ÿπÿßŸÖ €±Ÿ©€∏Ÿ• ŸÖÿå ŸàÿπŸÑŸâ ŸäÿØ ÿßŸÑÿ¥ŸäÿÆ ŸÖÿ≠ŸÖÿØ ÿ¢ÿØŸÖÿå ŸàÿÆÿ™ŸÖ ÿπŸÑŸâ ÿßŸÑÿ¥ŸäÿÆ ŸÖÿ≠ŸÖÿØ ÿ®ÿØŸàŸä ÿßŸÑÿ≥ŸäÿØ ÿ®ÿßŸÑÿ≥ŸÜÿØ ÿßŸÑŸÖÿ™ÿµŸÑ ÿ•ŸÑŸâ ÿ≠ŸÅÿµ ÿßŸÑÿ∞Ÿä ŸÇÿ±ÿ£ ÿπŸÑŸâ ÿπÿßÿµŸÖ ÿ®ŸÜ ÿ£ÿ®Ÿä ÿßŸÑŸÜÿ¨ŸàÿØ ÿπŸÜ ÿ£ÿ®Ÿä ÿπÿ®ÿØ ÿßŸÑÿ±ÿ≠ŸÖŸÜ ÿπÿ®ÿØ ÿßŸÑŸÑŸá ÿ®ŸÜ ÿ≠ÿ®Ÿäÿ® ÿßŸÑÿ≥ŸÑŸÖŸä Ÿàÿ≤ÿ± ÿ®ŸÜ ÿ≠ÿ®Ÿäÿ¥ ‚Äì ÿßŸÑÿ£ŸàŸÑ ÿπŸÜ ÿπÿ´ŸÖÿßŸÜ ÿ®ŸÜ ÿπŸÅÿßŸÜ ŸàÿπŸÑŸä ÿ®ŸÜ ÿ£ÿ®Ÿä ÿ∑ÿßŸÑÿ® Ÿàÿ£ÿ®Ÿä ÿ®ŸÜ ŸÉÿπÿ® Ÿàÿ≤ŸäÿØ ÿ®ŸÜ ÿ´ÿßÿ®ÿ™ Ÿàÿπÿ®ÿØ ÿßŸÑŸÑŸá ÿ®ŸÜ ŸÖÿ≥ÿπŸàÿØ ÿ±ÿ∂Ÿä ÿßŸÑŸÑŸá ÿπŸÜŸáŸÖ ÿå ŸàÿßŸÑÿ´ÿßŸÜŸä ÿπŸÜ ÿπÿ´ŸÖÿßŸÜ ÿ®ŸÜ ÿπŸÅÿßŸÜ Ÿàÿπÿ®ÿØ ÿßŸÑŸÑŸá ÿ®ŸÜ ŸÖÿ≥ÿπŸàÿØ ÿ±ÿ∂Ÿä ÿßŸÑŸÑŸá ÿπŸÜŸáŸÖÿß ‚Äì ŸàŸáŸÖ ÿπŸÜ ÿßŸÑŸÜÿ®Ÿä ÿµŸÑŸâ ÿßŸÑŸÑŸá ÿπŸÑŸäŸá Ÿàÿ≥ŸÑŸÖ ÿ≥ŸäÿØ ÿßŸÑÿ£ŸÜÿßŸÖ ŸàÿÆÿßÿ™ŸÖ ÿßŸÑŸÖÿ±ÿ≥ŸÑŸäŸÜ ÿπŸÜ ÿ£ŸÖŸäŸÜ ÿßŸÑŸàÿ≠Ÿä ÿ¨ÿ®ÿ±ŸäŸÑ ÿπŸÑŸäŸá ÿßŸÑÿ≥ŸÑÿßŸÖ ÿπŸÜ ÿßŸÑŸÑŸàÿ≠ ÿßŸÑŸÖÿ≠ŸÅŸàÿ∏ ÿπŸÜ ÿ±ÿ® ÿßŸÑÿπÿ≤ÿ© ÿ≥ÿ®ÿ≠ÿßŸÜŸá Ÿàÿ™ÿπÿßŸÑŸâ ÿ¨ŸÑ ÿ¨ŸÑÿßŸÑŸá Ÿàÿ™ŸÇÿØÿ≥ÿ™ ÿ£ÿ≥ŸÖÿßÿ§Ÿá.',
                      style: TextStyle(
                        fontFamily: fontFamily,
                        fontSize: fontSize,
                        height: 1.8,
                      ),
                    ),
                  ),
                  const SizedBox(height: 24),

                  // Section 3: YouTube Playlist & Link
                  Directionality(
                    textDirection: TextDirection.rtl,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      children: [
                        Text(
                          'üì∫ ŸäŸÖŸÉŸÜŸÉ ŸÖÿ¥ÿßŸáÿØÿ© ÿßŸÑÿ¥ÿ±ÿ≠ ÿßŸÑŸÉÿßŸÖŸÑ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑŸÅŸäÿØŸäŸàŸáÿßÿ™ ÿßŸÑÿ™ÿßŸÑŸäÿ©:',
                          style: TextStyle(
                            fontFamily: fontFamily,
                            fontSize: fontSize,
                            height: 1.8,
                          ),
                        ),
                        const SizedBox(height: 8),
                        // Clickable YouTube playlist link
                        GestureDetector(
                          onTap: () async {
                            final url =
                                'https://youtube.com/playlist?list=PLEkQk5xrP-tlAzcbIpuqjdFICW-knvTlR&si=fVDouQrntRal3gVt';
                            if (await canLaunchUrl(Uri.parse(url))) {
                              await launchUrl(
                                Uri.parse(url),
                                mode: LaunchMode.externalApplication,
                              );
                            }
                          },
                          child: Text(
                            'ÿ±ÿßÿ®ÿ∑ ŸÇÿßÿ¶ŸÖÿ© ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ÿπŸÑŸâ ÿßŸÑŸäŸàÿ™ŸäŸàÿ®',
                            textAlign: TextAlign.right,
                            style: TextStyle(
                              fontFamily: fontFamily,
                              fontSize: fontSize,
                              height: 1.8,
                              color: Colors.blue,
                              decoration: TextDecoration.underline,
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),

                  const SizedBox(height: 24),

                  ...videoIds.map(
                    (id) => Padding(
                      padding: const EdgeInsets.only(bottom: 24),
                      child: buildYoutubePlayer(id),
                    ),
                  ),
                ],
              ),
            );
          },
        );
      },
    );
  }
}
